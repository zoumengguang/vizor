{
    "VALUES": {
        "Action": "action_button",
        "Color picker": "color_picker",
        "Code Editor": "text_editor_generator",
        "Number": "const_float_generator",
        "Knob": "knob_float_generator",
        "Label": "label_generator",
        "Pi": "pi_generator",
        "Random": "random_float_generator",
        "Slider": "slider_float_generator",
        "Text": "const_text_generator",
        "Boolean toggle": "toggle_button",
        "Object composition": "object_add",
        "Line Envelope": "envelope_modulator"
    },

    "MATH": {
        "Absolute": "absolute_modulator",
        "Cos": "cos_modulator",
        "Exp": "exp_modulator",
        "Log": "log_modulator",
        "Max": "max_modulator",
        "Min": "min_modulator",
        "Sin": "sin_modulator",
        "Sqrt": "sqrt_modulator",
        "Tan": "tan_modulator",
        "Atan": "atan_modulator",
        "Atan2": "atan2_modulator",
        "Ceiling": "ceiling_modulator",
        "Floor": "floor_modulator",
        "Round": "round_modulator",
        "Accumulate": "accumulate_modulator",
        "Clamped accumulate": "clamped_accumulate_modulator",
        "Delta": "delta_modulator",
        "Add number": "add_modulator",
        "Clamp": "clamp_modulator",
        "Divide": "divide_modulator",
        "Mod": "modulate_modulator",
        "Multiply number": "multiply_modulator",
        "Negate": "negate_modulator",
        "Subtract": "subtract_modulator",
        "Lowpass Filter": "lowpass_filter_modulator",
        "Sample and hold": "sample_and_hold_modulator",
        "Add number conditionally": "add_on_trigger_float"
    },

    "LOGIC": {
        "If": "if_modulator",
        "If ... Else": "if_else_modulator",
        "Equals": "equals_modulator",
        "Not equal": "ne_modulator",
        "Less than": "less_than_modulator",
        "Less than or equal": "lte_modulator",
        "More than": "more_than_modulator",
        "More than or equal": "gte_modulator",
        "Nearly equal": "near_eq_modulator",
        "And": "and_modulator",
        "Nand": "nand_modulator",
        "Not": "not_modulator",
        "Or": "or_modulator",
        "Xor": "xor_modulator",
        "Switch": "switch_modulator",
        "Index Revolver Switch": "array_switch_modulator",
        "Trigger Revolver Switch": "trigger_revolver",
        "Boolean toggle Modulator": "toggle_modulator",
        "Trigger On Change": "change_trigger"
    },

    "LOAD CONTENT": {
        "Texture": "url_texture_generator",
        "Cubemap": "url_cubemap_generator",
        "Stereo Cubemap": "url_stereo_cubemap_generator",
        "Stereo Lat Long Map": "url_stereo_latlongmap_generator",
        "3D model": "three_loader_model",
        "Array": "url_array_generator",
        "Audio file loader": "url_audio_generator",
        "Audio buffer loader": "url_audio_buffer_generator",
        "JSON": "url_json_generator",
        "Video": "url_video_generator",

        "Deprecated: Stereo Cubemap": "stereo_cube_map"
    },

    "RENDERING BASICS": {
        "Render To Screen": "three_webgl_renderer",
        "Render To Texture": "three_webgl_texture_renderer",
        "Scene": "three_scene",
        "Environment Settings": "three_environment_settings"
    },

    "3D GEOMETRY AND MESH TOOLS": {
        "Box": "three_geometry_box",
        "Circle": "three_geometry_circle",
        "Cylinder": "three_geometry_cylinder",
        "Dodecahedron": "three_geometry_dodecahedron",
        "Sphere": "three_geometry_sphere",
        "Plane": "three_geometry_plane",
        "Ring": "three_geometry_ring",
        "Torus": "three_geometry_torus",
        "Procedural Ground": "three_procedural_ground",
        "Mesh": "three_mesh",
        "Point Cloud Mesh": "three_point_cloud_mesh",
        "3D Geometry Loader": "three_loader_model",
        "Particle Emitter": "three_particle_emitter",
        "3D Model Loader": "three_loader_scene",
        "Mesh Attributes": "three_object3d_attribute_extractor",
        "Bounding Box Extractor": "three_object3d_bbox_extractor",
        "Line Segments": "three_line_segments",
        "Vector Line": "three_meshline_mesh",
        "3D Object Group": "three_group"
    },

    "MATERIALS AND LIGHTS": {
        "Basic Material": "three_material",
        "Depth Material": "three_material_depth",
        "Lambert Material": "three_material_lambert",
        "Phong Material": "three_material_phong",
        "Standard Material": "three_material_standard",

        "Shader": "three_material_shader",
        "Point Cloud Material": "three_point_cloud_material",
        "Material Modifier": "three_material_modifier",
        "UV Modifier": "three_uv_modifier",
        "Line Material": "three_line_material",
        "Vector Line Material": "three_meshline_material",
        "Cubemap Material": "three_cube_material",
        "Material Extractor": "three_material_extractor",

        "Hemisphere Light": "three_hemisphere_light",
        "Directional Light": "three_directional_light",

        "Point Light": "three_point_light",
        "Spot Light": "three_spot_light",

        "Ambient Light": "three_ambient_light"
    },

    "INTERACTION STUFF": {
        "Gaze Clicker": "three_gaze_clicker",
        "Clickable Object": "three_clickable_object",

        "Object Gaze In": "on_three_object_gaze_in",
        "Object Gaze Out": "on_three_object_gaze_out",
        "Object Gaze Clicked": "on_three_object_gaze_clicked"
    },

    "STATE AND STRUCTURE": {
        "Annotation": "annotation",

        "Is In VR": "is_in_vr",

        "Read Variable": "variable_local_read",
        "Write Variable": "variable_local_write",
        "Write Variable on Trigger": "variable_local_write_conditional",

        "Input proxy": "input_proxy",
        "Output proxy": "output_proxy",

        "Nested Patch": "graph",

        "Entity": "entity",
        "Entity Component": "entity_component",

        "Loop": "loop",
        "Array Function": "array_function"
    },

    "CAMERAS": {
        "VR Camera": "three_vr_camera",
        "Orbit Camera": "three_orbit_camera",
        "Perspective Camera": "three_perspective_camera",
        "Screen Space Transform Extractor": "three_screen_space_transform_extractor",
        "Viewport Size": "viewport_size_generator",
        "Camera Forward Vector": "camera_forward_vector"
    },

    "AUDIO": {
        "Audio player": "audio_player",
        "Audio source player": "audio_source_player",
        "Analyse": "audio_analyse_modulator",
        "Buffer source": "audio_buffer_source_modulator",
        "Delay": "audio_delay_modulator",
        "Current time": "audio_get_current_time_modulator",
        "Duration": "audio_get_duration_modulator",
        "Module player": "module_player",
        "Gain (mix)": "audio_gain_modulator"
    },

    "DEBUG TOOLS": {
        "Bool": "bool_display",
        "Color": "color_display",
        "Data info": "data_info_display",
        "Float": "float_display",
        "Led": "led_display",
        "Log": "log_display",
        "Matrix": "matrix_display",
        "Plot": "plot_display",
        "Text": "text_display",
        "Object": "object_display",
        "Vector": "vector_display"
    },

    "GRAPH CONTROL": {
        "Stop playback": "stop_emitter",
        "Load File on Trigger": "load_graph_on_trigger",
        "Initialise": "initialise_generator"
    },

    "INPUT METHODS": {
        "Key press": "key_press_generator",
        "Touching": "touching_generator",
        "Touch Start": "touch_start_generator",
        "Touch End": "touch_end_generator",
        "Mouse buttons": "mouse_button_generator",
        "Mouse position": "mouse_position_generator",
        "Mouse wheel": "mouse_wheel_generator",
        "XBOX 360 Gamepad": "gamepad_generator",
        "HTC Vive Controller": "vive_controller"
    },

    "TEXT TOOLS": {
        "Experimental: Text Geometry": "three_text_geometry",
        "From text": "texture_from_text_generator",
        "Concatenate": "string_concatenate_modulator",
        "Parse JSON": "parse_json_modulator"
    },

    "CLOCKS": {
        "Clock": "clock_generator",
        "Delta time": "delta_t_generator"
    },

    "ARRAYS & OBJECTS": {
        "Inputs to Array": "inputs_to_array",
        "Array Set": "array_set",
        "Array Get": "array_get",
        "Array Remove": "array_remove",
        "Array Clear": "array_clear",
        "Array Length": "array_length",
        "Object array length": "member_array_length_modulator",
        "Object member to bool": "member_to_bool_modulator",
        "Object member to float": "member_to_float_modulator",
        "Object member to object": "member_to_object_modulator",
        "Object member to string": "member_to_string_modulator",
        "Object member to typed array": "member_to_typed_array_modulator"
    },

    "TYPED ARRAYS": {
        "Typed array": "typed_array_generator",
        "Typed array item to bool": "typed_array_item_to_bool_modulator",
        "Typed array item to float": "typed_array_item_to_float_modulator",
        "Typed array item to object": "typed_array_item_to_object_modulator",
        "Typed array item to string": "typed_array_item_to_string_modulator",
        "Typed array item to typed array": "typed_array_item_to_typed_array_modulator",
        "Typed array to texture": "typed_array_to_texture_modulator",
        "Get typed array": "typed_array_get_modulator",
        "Get typed array as": "typed_array_get_as_modulator",
        "Typed array Length": "typed_array_length_modulator",
        "Set typed array": "typed_array_set_modulator",
        "Set typed array as": "typed_array_set_as_modulator"
    },

    "COLOR MODULATORS": {
        "Add color": "color_add_modulator",
        "Blend color": "color_blend_modulator",
        "Multiply color": "color_multiply_modulator"
    },

    "CONVERTERS": {
        "Color to HSL": "convert_color_hsl_modulator",
        "Color to RGB": "convert_color_rgb_modulator",
        "HSL to Color": "convert_hsl_color_modulator",
        "RGB to Color": "convert_rgb_color_modulator",
        "Float as string": "format_string_float",
        "Bool to Float": "convert_bool_float_modulator",
        "Float to Bool": "convert_float_bool_modulator",
        "Oscilator to unit": "convert_oscilator_unit_modulator",
        "String to float": "convert_string_float_modulator",
        "Vector to XYZ": "convert_vector_xyz_modulator",
        "Vector to screenspace": "vector_to_screenspace",
        "XYZ to Vector": "vector",
        "Object to JSON": "object_stringify"
    },

    "VECTOR MATH": {
        "Add Vectors": "vector_add",
        "Subtract Vectors": "vector_subtract",
        "Multiply Vectors": "vector_multiply",
        "Magnitude/Length": "vector_magnitude",
        "Distance of Vectors": "vector_distance",
        "Cross": "vector_cross",
        "Dot": "vector_dot",
        "Normalize": "vector_normalize",
        "Scale": "vector_scale",
        "Transform": "vector_transform",
        "Add Vectors Conditionally": "add_on_trigger_vector3",
        "Rotation from Direction": "rotation_from_direction"
    },

    "OSCILLATORS": {
        "Cosine": "cosine_modulator",
        "Sawtooth": "sawtooth_modulator",
        "Sine": "sine_modulator",
        "Square": "square_modulator",
        "Triangle": "triangle_modulator",
        "In Tweens": "tween_in_modulator",
        "Out Tweens": "tween_out_modulator"
    },

    "EVENT EMITTER": {
        "Emit Single Runtime Event": "runtime_event_write",
        "Emit Continuous Runtime Events": "runtime_event_write_continuous",
        "On Runtime Event": "runtime_event_read"
    },

    "VIDEO": {
        "Duration": "video_get_duration_modulator",
        "Video player": "video_player",
        "Current time": "video_get_current_time_modulator"
    },

    "ANIMATION": {
        "Animate Float on Trigger": "animate_float_on_trigger",
        "Animate Vector3 on Trigger": "animate_vector3_on_trigger",
        "Animate Between Input Floats": "array_blend_modulator_float",
        "Animate Between Input Vector3s": "array_blend_modulator_vector3"
    },

    "EXPERIMENTAL": {
        "Radial Point Geometry": "radial_point_geometry",
        "Cubemap Assembler": "cubemap_assembler",
        "Stereo Cube Map (old)": "stereo_cube_map",
        "Photosphere Orientation": "photosphere_orientation_reader"
    }

}
